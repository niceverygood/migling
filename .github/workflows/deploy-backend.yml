name: Deploy Backend to EC2

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies and build
      run: |
        cd backend
        npm ci --production=false
        npm run build
        
    - name: Create deployment package  
      run: |
        cd backend
        # Create deployment directory
        mkdir -p deploy
        
        # Copy built application
        cp -r build deploy/
        cp package*.json deploy/
        cp -r migrations deploy/
        
        # Create deployment script
        cat > deploy/deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "🚀 Starting deployment..."
        
        # Navigate to application directory
        cd /home/ubuntu/mingling/backend
        
        # Stop current application
        pm2 stop mingling-backend || true
        
        # Backup current version
        if [ -d "current" ]; then
          rm -rf backup
          mv current backup
        fi
        
        # Create new deployment directory
        mkdir -p current
        
        # Update from git
        cd /home/ubuntu/mingling
        git pull origin main
        
        # Install dependencies and build
        cd backend
        npm ci --production=false
        npm run build
        
        # Run migrations
        npm run migrate
        
        # Start application with PM2
        pm2 start build/index.js --name mingling-backend || pm2 restart mingling-backend
        
        # Save PM2 configuration
        pm2 save
        
        echo "✅ Deployment completed!"
        EOF
        
        chmod +x deploy/deploy.sh
        
    - name: Deploy via AWS SSM (Session Manager)
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
      run: |
        # Install AWS CLI
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        
        # Execute deployment script via SSM
        aws ssm send-command \
          --instance-ids "$INSTANCE_ID" \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy Mingling Backend" \
          --parameters 'commands=[
            "cd /home/ubuntu/mingling",
            "git pull origin main",
            "cd backend", 
            "npm ci --production=false",
            "npm run build",
            "npm run migrate",
            "pm2 stop mingling-backend || true",
            "pm2 start build/index.js --name mingling-backend || pm2 restart mingling-backend",
            "pm2 save",
            "echo \"✅ Deployment completed!\""
          ]' \
          --region "$AWS_REGION"

    - name: Health Check
      run: |
        echo "⏳ Waiting for deployment to complete..."
        sleep 60
        
        # Check server health
        response=$(curl -s "${{ secrets.EC2_HEALTH_CHECK_URL }}/api/health" || echo "failed")
        if [[ $response == *"production"* ]]; then
          echo "✅ Health check passed!"
          echo "$response"
        else
          echo "❌ Health check failed!"
          echo "$response"
          exit 1
        fi
        
    - name: Post Checkout code
      uses: actions/checkout@v3
      if: success()
      
    - name: Complete job  
      run: echo "🎉 Deployment successful!" 